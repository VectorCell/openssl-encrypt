#!/bin/bash

remove="false"
while [[ $# > 0 ]]; do
	key="$1"
	case $key in
		-i)
		inputfile="$2"
		shift # past argument
		;;
		-k|--key)
		keyfile="$2"
		shift # past argument
		;;
		--rm)
		remove="true"
		;;
		*)
		# unknown option
		;;
	esac
	shift # past argument or value
done

if [ ! -e "$keyfile" ]; then
	if [ -z "$keyfile" ]; then
		echo "ERROR: keyfile not specified"
	else
		echo "ERROR: $keyfile not found"
	fi
	exit 1
elif [ ! -e "$inputfile" ]; then
	if [ -z "$inputfile" ]; then
		echo "ERROR: inputfile not specified"
	else
		echo "ERROR: $inputfile not found"
	fi
	exit 1
fi

tempkey="/run/shm/tempkey-$RANDOM.bin"

# decrypts key for AES-256
openssl rsautl -decrypt -inkey $HOME/.ssh/id_rsa < "$keyfile" > $tempkey

# decrypts inputfile
echo "decrypting $inputfile ..."
if [ -n "$(which pv)" ]; then
	openssl enc -d -aes-256-cbc -in "$inputfile" -pass file:$tempkey | pv -s $(ls -l "$inputfile" | awk '{print $5}') | tar -x
#	if [ "$?" != "0" ]; then
#		openssl enc -d -aes-256-cbc -in "$inputfile" -pass file:$tempkey \
#			| pv -s $(ls -l "$inputfile" | awk '${print $5}') \
#			> "output-$RANDOM.file"
#	fi
else
	openssl enc -d -aes-256-cbc -in "$inputfile" -pass file:$tempkey \
	| tar -x
	if [ "$?" != "0" ]; then
		openssl enc -d -aes-256-cbc -in "$inputfile" -pass file:$tempkey \
			> "output-$RANDOM.file"
	fi
fi

if [ "$remove" == "true" ]; then
	echo "removing $inputfile and $keyfile"
	rm "$inputfile" "$keyfile"
fi

rm $tempkey
