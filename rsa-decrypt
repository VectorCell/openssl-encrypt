#!/bin/bash

while [[ $# > 0 ]]; do
	key="$1"
	case $key in
		-i)
		inputfile="$2"
		shift # past argument
		;;
		-k|--key)
		keyfile="$2"
		shift # past argument
		;;
		-o)
		outputfile="$2"
		shift # past argument
		;;
		--default)
		DEFAULT=YES
		;;
		*)
		# unknown option
		;;
	esac
	shift # past argument or value
done

if [ ! -e "$keyfile" ]; then
	echo "ERROR: $keyfile not found"
	exit 1
elif [ ! -e "$inputfile" ]; then
	echo "ERROR: $inputfile not found"
	exit 1
fi

if [ -z "$outputfile" ]; then
	if [ "$(echo $inputfile | rev | colrm 5 | rev)" == ".enc" ]; then
		basename="$(echo $inputfile | rev | colrm 1 4 | rev)"
		if [ ! -e "$basename" ]; then
			outputfile="$basename"
		else
			outputfile="$inputfile.dec"
			echo "$basename already exists, decrypting file to $outputfile"
		fi
	else
		outputfile="$inputfile"
	fi
fi
if [ -e "$outputfile" ]; then
	echo "ERROR: $outputfile already exists"
	exit 1
fi

tempkey="/run/shm/tempkey-$RANDOM.bin"

# decrypts key for AES-256
openssl rsautl -decrypt -inkey $HOME/.ssh/id_rsa < "$keyfile" > $tempkey

# decrypts inputfile
if [ -n "$(which pv)" ]; then
	openssl enc -d -aes-256-cbc -in "$inputfile" -pass file:$tempkey | pv > "$outputfile"
else
	openssl enc -d -aes-256-cbc -in "$inputfile" -pass file:$tempkey > "$outputfile"
fi
rm $tempkey
